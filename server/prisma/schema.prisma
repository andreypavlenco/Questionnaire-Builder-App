
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Survey {
  id             String    @id @default(uuid())
  title          String
  description    String?
  questionCount  Int       @default(0)
  passCount      Int       @default(0) 
  questions      Question[]
  surveySessions SurveySession[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Question {
  id         String    @id @default(uuid())
  text       String
  type       QuestionType
  order      Int
  surveyId   String
  survey     Survey    @relation(fields: [surveyId], references: [id])
  options    AnswerOption[] 
  userAnswers UserAnswer[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

enum QuestionType {
  TEXT
  SINGLE_CHOICE
  MULTIPLE_CHOICE
  IMAGE
}

model AnswerOption {
  id         String    @id @default(uuid())
  text       String
  questionId String
  question   Question  @relation(fields: [questionId], references: [id])
  userAnswers UserAnswer[]
}

model SurveySession {
  id         String    @id @default(uuid())
  surveyId   String
  survey     Survey    @relation(fields: [surveyId], references: [id])
  completed  Boolean   @default(false)
  timeTaken  Int?     
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  userAnswers UserAnswer[]
}

model UserAnswer {
  id             String    @id @default(uuid())
  surveySessionId String
  surveySession  SurveySession @relation(fields: [surveySessionId], references: [id])
  questionId     String
  question       Question  @relation(fields: [questionId], references: [id])
  answerText     String? 
  selectedOptions AnswerOption[]
  createdAt      DateTime  @default(now())
}